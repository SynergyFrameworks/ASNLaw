<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblDefinition.Text" xml:space="preserve">
    <value>Projects and Documents were defined in the Document Analyzer. Select a Project for creating a Matrix using its associated Documents. Documents should have been parsed (analyzed) by the Document Analyzer prior to creating a Matrix.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picHeader.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAc9JREFUeF7t2C9IA2EYx/EhYrGYLIJJzCaL2WS1ahBsVotpCAYx2v3TrRbLkggW
        g6yIILZhMQzHuN02n/e936ZjGE6Q95F9PzB2924e3+1e716tAAAAAAAAAAAAAMCkabVaC/1+/8UeZZzr
        xydLtVqd6vV6t/oSStEhJkue51v6/KXpEJPFZtedPn9pOsT/onYXlOSbWl1Qkm9qdUFJvqnVBSX5ptaf
        3OhtGNAXM8bufrk9rehtGCi+nnHdbvdCr68XIy6kn/EKGWGz6yP8uVOr1aZt96EYTcvNjC9yRtnsOgyv
        2Sp+R0PJWdNZDE5NPUN2Jt8ajcZseIRtDScVZnyz2ZxXclpq+m5X40fFrgsHMdYDBUV2Jh913VoMZ7UY
        Te41zHblpqeoyK5ZGxq7LEZc2I6hXigqiLfsLMtWtZ+czfL7GOmJwoa3bNv+1T8D/0Kn01mLkZ6EsMEi
        1X4lN2OpA3birmKgN+HiHhap9Xp9xraf1ZuUdWTtdntJib7Y7DrW8756k7OWkxjnUbhlh0Whdb4XuWnZ
        7AqL5Tnl+WSBp7HWhz1l+WTXimU7q+EumZx1PIWFs9J8sshr9SY3WDgDAAAAAAAAAAAAAIAvlcon2W0N
        QGFqTGEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAf5JREFUeF7t1sFKw0AUheGu3Pj+W5/BN9CdT9CNCCKilCJIF7oQG53M/BwocsPQ
        JnYSzgeDncNMcnJXrszMzMzMzMzMzGxcPyPquu52s9lc8uhl4ltHs/ih8Z2jWvTQ+MbRLWJofMsgjlbh
        Smj2Q+M7BnG0ClckDeianzLrofENgzhahSuyXq8vFjU0+g/iaBWuSJ8tamh0lyirxRUhXs7Q6C1RVosr
        QpwtYmh0liirxRUhltkPjb4SZbW4IsQHZj00ukqU1eKKEP8xNDSOtImeEmW1uHISHtUmOkqU1eLKSXhU
        m+goZLuyK/LBSlw5CY9qEx2FbFt2RT5YiSsn4VFtoqOQHT2wY/AaIW4THYXMA4vQUcg8sAgdhcwDi9BR
        yDywCB2F7LnsinxwQrxGiNtERyFbl12RD06I1whxm+goZB5YhI5C5oFF6ChkHliEjkLmgUXoKGQeWISO
        QuaBRegofdZ13R3bLB+cEK8R4jbRUchuyq7IByfEa4S4TXQUMg8sQkch88AidBSyg4H9t1ysVXQUMg8s
        Qkch88AidJQ+2+/3V+lfi3vWQ4of+5V+P6X10q+0f01/t6y3tH/vV/q9S+ujX2n/mf5+sb7Tvkou1io6
        CvGkeJUQzwOdz4oq80Dns6LKPND5rKgyD3Q+K6qYmZmZmZmZmZmZ/afV6hfzOTa7yURXVQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>