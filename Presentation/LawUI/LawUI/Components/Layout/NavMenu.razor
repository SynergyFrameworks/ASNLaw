@implements IDisposable
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="education" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.LightbulbCircle">Education</MudNavLink>
    <MudNavLink Href="documents" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Dock">Documents</MudNavLink>
    <MudNavLink Href="community" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.CommentBank">Community</MudNavLink>
    <MudNavLink Href="message" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AlternateEmail">Message</MudNavLink>
    <MudNavLink Href="analyze" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AccessibilityNew">Analyze Document</MudNavLink>
    <MudNavLink Href="speechtotext" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AddBusiness">Speech to Text</MudNavLink>
    <MudNavLink Href="auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lock">Auth Required</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@_userName</MudNavLink>
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="mud-nav-link mud-ripple">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" Color="Color.Info" Class="mr-3"></MudIcon> Logout
                </button>
            </form>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Register</MudNavLink>
            <MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private string? currentUrl;
    private string _userName = "User";

    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        _userName = user.Identity?.Name ?? "User";
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}